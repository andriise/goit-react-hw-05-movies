{"version":3,"file":"static/js/115.0de7b3c2.chunk.js","mappings":"iOAsFA,UAlFe,WACb,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SAErC,GAA0BT,EAAAA,EAAAA,WAAS,kBAAMQ,GAAe,EAArB,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,sGAEZX,GAAW,GAFC,UAGcY,EAAAA,EAAAA,IAAYR,GAH1B,gBAGJS,EAHI,EAGJA,QACRf,EAAQe,GACRb,GAAW,GALC,kDAOZc,QAAQC,IAAR,MAPY,yBASZf,GAAW,GATC,6EAAH,qDAYTI,GACFO,GAEH,GAAE,CAACP,IAWJ,OACE,iCACE,4BACE,4CAEA,kBAAMY,SAVS,SAAAC,GACnBA,EAAEC,iBACFf,EAAgB,CAAEG,MAAOA,GAC1B,EAOK,WACE,kBACEa,MAAOb,EACPc,SAjBW,SAAAH,GACnBV,EAASU,EAAEI,OAAOF,MACnB,EAgBSG,KAAK,SACLC,KAAK,OACLC,YAAY,eAGd,mBAAQD,KAAK,SAAb,2BAKJ,wBACGnB,EACCL,EACE,aACEF,EAAK4B,OAAS,EAChB5B,EAAK6B,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACP,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMtB,GAAYuB,GAAE,kBAAaH,GAAhD,SACGD,KAFIC,EADF,KAQT,6FAKF,qBAKT,C","sources":["components/Movies/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovie } from 'components/services/services';\n\nconst Movies = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  const [query, setQuery] = useState(() => searchQuery || '');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { results } = await searchMovie(searchQuery);\n        setData(results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (searchQuery) {\n      getData();\n    }\n  }, [searchQuery]);\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <>\n      <div>\n        <h2>Search movies:</h2>\n\n        <form onSubmit={handleSubmit}>\n          <input\n            value={query}\n            onChange={handleChange}\n            name=\"search\"\n            type=\"text\"\n            placeholder=\"Type here\"\n      \n          />\n          <button type=\"submit\">\n            Search\n          </button>\n        </form>\n      </div>\n      <ul>\n        {searchQuery ? (\n          loading ? (\n            'Loading...'\n          ) : data.length > 0 ? (\n            data.map(({ title, id }) => (\n              <li key={id}>\n                <Link state={{ from: location }} to={`/movies/${id}`}>\n                  {title}\n                </Link>\n              </li>\n            ))\n          ) : (\n            <p>\n              No movies with this title were found. Try entering another title\n            </p>\n          )\n        ) : (\n          <p></p>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","data","setData","loading","setLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","query","setQuery","location","useLocation","useEffect","getData","searchMovie","results","console","log","onSubmit","e","preventDefault","value","onChange","target","name","type","placeholder","length","map","title","id","state","from","to"],"sourceRoot":""}